version: 2.1
orbs:
  kubernetes: circleci/kubernetes@0.12.0
executors:
  main:
    docker:
      - image: rust:1.81.0-bookworm
  postgres-alongside:
    docker:
      - image: rust:1.81.0-bookworm
      - image: cimg/postgres:14.0
        environment:
          POSTGRES_USER: postgres
          POSTGRES_HOST_AUTH_METHOD: trust

jobs:
  build-publish-backend-docker-images:
    resource_class: xlarge
    machine:
      image: ubuntu-2004:202111-01
      docker_layer_caching: true
    steps:
      - checkout
      - run:
          name: Build base Docker image
          command: |
            docker build -t botloader-base .
      - run:
          name: Build backend
          command: |
            docker build -t botloader/backend -f cmd/backend/Dockerfile .
      # - run:
      #     name: Build scheduler and worker
      #     command: |
      #       docker build -t botloader/bl-schedulerwithworker -f cmd/schedulerwithworker/Dockerfile .
      # - run:
      #     name: Build webapi
      #     command: |
      #       docker build -t botloader/bl-webapi -f cmd/webapi/Dockerfile .
      # - run:
      #     name: Build jobs
      #     command: |
      #       docker build -t botloader/bl-jobs -f cmd/jobs/Dockerfile .
      # - run:
      #     name: Build dbserver
      #     command: |
      #       docker build -t botloader/bl-dbserver -f cmd/dbserver/Dockerfile .
      # - run:
      #     name: Archive images
      #     command: |
      #       docker save -o image-broker.tar botloader/bl-discordbroker
      #       docker save -o image-scheduler.tar botloader/bl-schedulerwithworker
      #       docker save -o image-webapi.tar botloader/bl-webapi
      # - persist_to_workspace:
      #     root: .
      #     paths:
      #       - ./image-webapi.tar
      #       - ./image-broker.tar
      #       - ./image-scheduler.tar
      - run:
          name: Docker login
          command: |
            echo "$DOCKER_TOKEN" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            # tag with build number
            docker tag botloader/backend:latest "botloader/backend:$CIRCLE_BUILD_NUM"
            # docker tag botloader/bl-discordbroker:latest "botloader/bl-discordbroker:$CIRCLE_BUILD_NUM"
            # docker tag botloader/bl-schedulerwithworker:latest "botloader/bl-schedulerwithworker:$CIRCLE_BUILD_NUM"
            # docker tag botloader/bl-jobs:latest "botloader/bl-jobs:$CIRCLE_BUILD_NUM"
            # docker tag botloader/bl-dbserver:latest "botloader/bl-dbserver:$CIRCLE_BUILD_NUM"
            # push
            docker push "botloader/backend:$CIRCLE_BUILD_NUM"
            # docker push "botloader/bl-discordbroker:$CIRCLE_BUILD_NUM"
            # docker push "botloader/bl-schedulerwithworker:$CIRCLE_BUILD_NUM"
            # docker push "botloader/bl-jobs:$CIRCLE_BUILD_NUM"
            # docker push "botloader/bl-dbserver:$CIRCLE_BUILD_NUM"
  build-publish-db-migration-image:
    docker:
      - image: cimg/base:2022.06
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - run:
          name: Build image
          command: |
            docker build -t botloader/bl-dbmigrations -f cmd/dbmigrations/Dockerfile .
      - run:
          name: Docker login
          command: |
            echo "$DOCKER_TOKEN" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            # tag with build number
            docker tag botloader/bl-dbmigrations:latest "botloader/bl-dbmigrations:$CIRCLE_BUILD_NUM"
            # push
            docker push "botloader/bl-dbmigrations:$CIRCLE_BUILD_NUM"
  # publish-backend-images:
  #   resource_class: medium
  #   docker:
  #     - image: cimg/base:2021.04
  #   steps:
  #     - attach_workspace:
  #         at: /tmp/workspace
  #     - setup_remote_docker
  #     - run:
  #         name: Load archived images
  #         command: |
  #           docker load -i /tmp/workspace/image-webapi.tar
  #           docker load -i /tmp/workspace/image-bot.tar
  #     - run:
  #         name: Docker login
  #         command: |
  #           echo "$DOCKER_TOKEN" | docker login -u "$DOCKER_USERNAME" --password-stdin
  #     - run:
  #         name: Publish Docker Image to Docker Hub
  #         command: |
  #           docker push "botloader/bl-webapi:latest"
  #           docker push "botloader/botloader-bot:latest"
  #           docker tag botloader/bl-webapi:latest "botloader/bl-webapi:$CIRCLE_BUILD_NUM"
  #           docker tag botloader/botloader-bot:latest "botloader/botloader-bot:$CIRCLE_BUILD_NUM"
  #           docker push "botloader/bl-webapi:$CIRCLE_BUILD_NUM"
  #           docker push "botloader/botloader-bot:$CIRCLE_BUILD_NUM"
  build-frontend-image:
    resource_class: medium
    docker:
      - image: cimg/base:2022.06
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
          version: 20.10.14
      - run:
          name: Build docker image
          command: |
            docker build --build-arg BOTLOADER_API_BASE="https://api.botloader.io" --build-arg BOTLOADER_CLIENT_ID="907015513073397870" -t botloader/bl-frontend . -f frontend/Dockerfile
      - run:
          name: Archive image
          command: |
            docker save -o image-frontend.tar botloader/bl-frontend
      - persist_to_workspace:
          root: .
          paths:
            - ./image-frontend.tar
  publish-frontend-images:
    resource_class: medium
    docker:
      - image: cimg/base:2021.04
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker:
          version: 20.10.7
      - run:
          name: Load archived images
          command: |
            docker load -i /tmp/workspace/image-frontend.tar
      - run:
          name: Docker login
          command: |
            echo "$DOCKER_TOKEN" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            docker push "botloader/bl-frontend:latest"
            docker tag botloader/bl-frontend:latest "botloader/bl-frontend:$CIRCLE_BUILD_NUM"
            docker push "botloader/bl-frontend:$CIRCLE_BUILD_NUM"
workflows:
  build-n-publish-frontend:
    jobs:
      - build-frontend-image:
          filters:
            branches:
              only: master
      - publish-frontend-images:
          filters:
            branches:
              only: master
          requires:
            - build-frontend-image
  build-n-publish-backend:
    jobs:
      - build-publish-backend-docker-images:
          filters:
            branches:
              only: master
  build-publish-db-migration-image:
    jobs:
      - build-publish-db-migration-image:
          filters:
            branches:
              only: master
