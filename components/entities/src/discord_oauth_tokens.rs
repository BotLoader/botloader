//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.0-rc.5

use sea_orm::entity::prelude::*;
use twilight_model::id::marker::UserMarker;

use crate::TwilightId;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "discord_oauth_tokens")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub user_id: TwilightId<UserMarker>,
    #[sea_orm(column_type = "Text")]
    pub discord_bearer_token: String,
    #[sea_orm(column_type = "Text")]
    pub discord_refresh_token: String,
    pub discord_token_expires_at: DateTimeWithTimeZone,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::web_sessions::Entity")]
    WebSessions,
}

impl Related<super::web_sessions::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::WebSessions.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
